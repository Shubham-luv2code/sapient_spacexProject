{"version":3,"sources":["rocket.jpg","serviceWorker.js","index.js","App.js"],"names":["module","exports","Boolean","window","location","hostname","match","ReactDOM","hydrate","StrictMode","path","component","props","useState","unfilteredData","setUnfilteredData","launchYears","launchOptions","landOptions","newUrl","setNewUrl","dataUrl","setDataUrl","React","hasMounted","setHasMounted","useEffect","history","push","substring","indexOf","fetch","method","headers","then","response","json","data","catch","err","filterHandler","e","ind","preventDefault","appendUrl","appendDataUrl","substrUrl","elementObj","target","id","document","getElementById","className","includes","replace","Number","textContent","launchVal","landVal","length","map","launchYear","key","onClick","launchOpt","landOpt","unfilteredItem","alt","src","links","mission_patch","require","mission_name","flight_number","mission_id","missionObj","missionInd","launch_year","launch_success","rocket","first_stage","cores","land_success","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.c0be200e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rocket.c369cf4f.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nReactDOM.hydrate(\n  <React.StrictMode>\n    <Router>\n      <div> \n        <Switch>\n         <Route path=\"/\" component={App}></Route>\n        </Switch>\n      </div>\n   </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nexport default function App(props) {\n  let [unfilteredData, setUnfilteredData] = useState([]);\n  let [launchYears] = useState([2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]);\n  let [launchOptions] = useState(['True', 'False']);\n  let [landOptions] = useState(['True', 'False']);\n  let [newUrl, setNewUrl] = useState('https://api.spacexdata.com/v3/launches?limit=100');\n  let [dataUrl, setDataUrl] = useState('https://api.spacexdata.com/v3/launches?limit=100');\n  const [hasMounted, setHasMounted] = React.useState(false);\n\n  useEffect(() => {\n\n    props.history.push('/' + newUrl.substring(newUrl.indexOf('v3')))\n    fetch(newUrl, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then(response => response.json())\n      .then(data => {\n        setUnfilteredData(data);\n        setHasMounted(true);\n      })\n      .catch(err => { throw err })\n\n  }, [newUrl, dataUrl]);\n\n  const filterHandler = (e, ind) => {\n    e.preventDefault();\n    var appendUrl, appendDataUrl, substrUrl = '';\n\n    var elementObj = {}\n    if (e.target.id === `yearBtn_${ind}`) {\n      elementObj = document.getElementById(`yearBtn_${ind}`)\n      elementObj.className = elementObj.className.includes('active') ? elementObj.className.replace(\" active\", \"\") : elementObj.className + \" active\"\n      appendUrl = `&launch_year=${Number(e.target.textContent)}`\n      appendDataUrl = `&launch_year=${Number(e.target.textContent)}X`\n      if (!newUrl.includes('launch_year')) {\n        setNewUrl(newUrl + appendUrl)\n        setDataUrl(dataUrl + appendDataUrl)\n\n      } else {\n        substrUrl = dataUrl.substring(dataUrl.indexOf('launch_year=') - 1, dataUrl.indexOf('X'))\n        setNewUrl(newUrl.replace(substrUrl, appendUrl))\n        setDataUrl(dataUrl.replace(substrUrl, appendDataUrl))\n      }\n    }\n    else if (e.target.id === `launchBtn_${ind}`) {\n      elementObj = document.getElementById(`launchBtn_${ind}`)\n      elementObj.className = elementObj.className.includes('active') ? elementObj.className.replace(\" active\", \"\") : elementObj.className + \" active\"\n      let launchVal = e.target.textContent === 'True' ? true : false\n      appendUrl = `&launch_success=${launchVal}`\n      appendDataUrl = `&launch_success=${launchVal}Y`\n      if (!newUrl.includes('launch_success')) {\n\n        setNewUrl(newUrl + appendUrl)\n        setDataUrl(dataUrl + appendDataUrl)\n      }\n      else {\n        substrUrl = dataUrl.substring(dataUrl.indexOf('launch_success=') - 1, dataUrl.indexOf('Y'))\n        setNewUrl(newUrl.replace(substrUrl, appendUrl))\n        setDataUrl(dataUrl.replace(substrUrl, appendDataUrl))\n      }\n\n\n    }\n    else if (e.target.id === `landBtn_${ind}`) {\n      elementObj = document.getElementById(`landBtn_${ind}`)\n      elementObj.className = elementObj.className.includes('active') ? elementObj.className.replace(\" active\", \"\") : elementObj.className + \" active\"\n      let landVal = e.target.textContent === 'True' ? true : false\n      appendUrl = `&land_success=${landVal}`\n      appendDataUrl = `&land_success=${landVal}Z`\n      if (!newUrl.includes('land_success')) {\n\n        setNewUrl(newUrl + appendUrl)\n        setDataUrl(dataUrl + appendDataUrl)\n      }\n      else {\n        substrUrl = dataUrl.substring(dataUrl.indexOf('land_success=') - 1, dataUrl.indexOf('Z'))\n        setNewUrl(newUrl.replace(substrUrl, appendUrl))\n        setDataUrl(dataUrl.replace(substrUrl, appendDataUrl))\n      }\n    }\n  }\n  return (\n    hasMounted &&\n    <div>\n      <h1>SpaceX Launch Program</h1>\n      <div className=\"row\">\n        <div className=\"parent-column\">\n          <div className=\"filter-column\" >\n            <div className=\"container\">\n              <h2>Filters</h2>\n              <div>\n                <p className=\"filter-header\">Launch Year</p>\n                <div className=\"button-container\">\n                  {\n\n                    launchYears && launchYears.length > 0 && launchYears.map((launchYear, ind) => {\n                      return (\n                        <button key={`yearBtn_${ind}`} id={`yearBtn_${ind}`} className=\"button-column\" onClick={(e) => filterHandler(e, ind)}>{launchYear}</button>\n                      )\n                    })\n\n                  }</div>\n              </div>\n              <div>\n                <p className=\"filter-header\">Successful Launch</p>\n\n                {\n                  launchOptions && launchOptions.length > 0 && launchOptions.map((launchOpt, ind) => {\n                    return (\n                      <button key={`launchBtn_${ind}`} id={`launchBtn_${ind}`} className=\"button-column\" onClick={(e) => filterHandler(e, ind)}>{launchOpt}</button>\n                    )\n                  })\n\n                }\n              </div><br />\n              <div>\n                <p className=\"filter-header\">Successful Landing</p>\n\n                {\n                  landOptions && landOptions.length > 0 && landOptions.map((landOpt, ind) => {\n                    return (\n                      <button key={`landBtn_${ind}`} id={`landBtn_${ind}`} className=\"button-column\" onClick={(e) => filterHandler(e, ind)}>{landOpt}</button>\n                    )\n                  })\n                }\n              </div>\n            </div>\n          </div>\n          <div className=\"card-parent-column\">\n            {\n              unfilteredData && unfilteredData.length > 0 && unfilteredData.map((unfilteredItem, ind) => {\n                return (\n\n                  <div key={`${unfilteredItem}_${ind}`} className=\"card-column\" >\n                    <img className='img-width' alt=\"Space Ship\" src={unfilteredItem.links.mission_patch === null ? require('./rocket.jpg') : unfilteredItem.links.mission_patch} />\n                    <div className=\"container\">\n\n                      <p className=\"launch-name\">{unfilteredItem.mission_name} # {unfilteredItem.flight_number}</p>\n                      <div><p className=\"thick\">Mission IDs:&nbsp;</p>\n                        <ul>\n                          {\n                            unfilteredItem.mission_id && unfilteredItem.mission_id.length > 0 && unfilteredItem.mission_id.map((missionObj, missionInd) => {\n                              return (\n                                <li key={`${missionObj}_${missionInd}`}>\n                                  {missionObj}\n                                </li>\n                              )\n                            })\n                          }\n                        </ul>\n                      </div>\n                      <div className=\"details\"><p className=\"thick\">Launch Year:&nbsp;</p><p>{unfilteredItem.launch_year}</p></div>\n                      <div className=\"details\"><p className=\"thick\">Successful Launch:&nbsp;</p><p>{unfilteredItem.launch_success ? 'YES' : 'NO'}</p></div>\n                      <div className=\"details\"><p className=\"thick\">Successful Landing:&nbsp;</p><p>{unfilteredItem.rocket.first_stage.cores[0].land_success !== null ? 'YES' : 'NO'}</p></div>\n                    </div>\n                  </div>\n\n                )\n              })\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n//export default App;\n"],"sourceRoot":""}